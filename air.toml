# Air is a tool for live-reloading Go applications
# Config file for Air in TOML format

# Working directory
root = "."
tmp_dir = "tmp"

[build]
# Just plain old shell command
cmd = "go build -o ./tmp/screenmoments ."
# Binary file yields from `cmd`
bin = "tmp/screenmoments"
# Customize binary
full_bin = "./tmp/screenmoments"
# Watch these filename extensions
include_ext = ["go", "tpl", "tmpl", "html"]
# Ignore these paths/files
exclude_dir = ["assets", "tmp", "vendor", ".git"]
# Watch these specific files
include_file = []
# Exclude specific files from watching
exclude_file = []
# This log file places in your tmp_dir
log = "air.log"
# It's not necessary to trigger build each time file changes
delay = 1000 # ms
# Stop running old binary when build errors occur
stop_on_error = true
# Send Interrupt signal before killing process (windows does not support this feature)
send_interrupt = false
# Kill process if interrupt signal is not handled within this time frame (seconds)
kill_delay = 500 # ms

[color]
# Customize each part's color. If no color is found, use the raw app log.
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[log]
# Show log time
time = false

[misc]
# Delete tmp directory on exit
clean_on_exit = true
